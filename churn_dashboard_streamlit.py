{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "24257d9b-1dc3-40c7-9d73-9309bf796e59",
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "# Setup\n",
    "st.set_page_config(layout=\"wide\")\n",
    "st.title(\"Telco Customer Churn - EDA Dashboard\")\n",
    "\n",
    "#import saved csv from eda\n",
    "df = pd.read_csv('cleaned_churn_data.csv')\n",
    "\n",
    "# Sidebar\n",
    "st.sidebar.header(\"Filter Options\")\n",
    "contract_filter = st.sidebar.multiselect(\"Contract Type\", df['Contract'].unique(), default=df['Contract'].unique())\n",
    "internet_filter = st.sidebar.multiselect(\"Internet Service\", df['InternetService'].unique(), default=df['InternetService'].unique())\n",
    "\n",
    "df_filtered = df[df['Contract'].isin(contract_filter) & df['InternetService'].isin(internet_filter)]\n",
    "\n",
    "# Plotting\n",
    "def plot_count(column, hue=None, title=\"\"):\n",
    "    fig, ax = plt.subplots()\n",
    "    sns.countplot(x=column, hue=hue, data=df_filtered, palette='Set2', ax=ax)\n",
    "    plt.title(title)\n",
    "    plt.xticks(rotation=30)\n",
    "    return fig\n",
    "\n",
    "def plot_box(x, y, title=\"\"):\n",
    "    fig, ax = plt.subplots()\n",
    "    sns.boxplot(x=x, y=y, data=df_filtered, palette='Set2', ax=ax)\n",
    "    plt.title(title)\n",
    "    return fig\n",
    "\n",
    "def plot_hist(x, title=\"\"):\n",
    "    fig, ax = plt.subplots()\n",
    "    sns.histplot(data=df_filtered, x=x, hue=\"Churn\", multiple=\"stack\", palette='Set2', bins=30, ax=ax)\n",
    "    plt.title(title)\n",
    "    return fig\n",
    "\n",
    "def plot_heatmap():\n",
    "    fig, ax = plt.subplots()\n",
    "    sns.heatmap(df_filtered.corr(numeric_only=True), annot=True, cmap='coolwarm', fmt=\".2f\", ax=ax)\n",
    "    plt.title(\"Correlation Heatmap\")\n",
    "    return fig\n",
    "\n",
    "# Tabs\n",
    "tab1, tab2, tab3, tab4 = st.tabs([\"Churn Overview\", \"Categorical Analysis\", \"Charges & Tenure\", \"Correlation\"])\n",
    "\n",
    "with tab1:\n",
    "    st.subheader(\"Churn Distribution\")\n",
    "    st.pyplot(plot_count(\"Churn\", title=\"Churn Count\"))\n",
    "\n",
    "with tab2:\n",
    "    st.subheader(\"Contract Type vs Churn\")\n",
    "    st.pyplot(plot_count(\"Contract\", \"Churn\", \"Churn by Contract Type\"))\n",
    "\n",
    "    st.subheader(\"Internet Service vs Churn\")\n",
    "    st.pyplot(plot_count(\"InternetService\", \"Churn\", \"Churn by Internet Service\"))\n",
    "\n",
    "    st.subheader(\"Tech Support vs Churn\")\n",
    "    st.pyplot(plot_count(\"TechSupport\", \"Churn\", \"Churn by Tech Support\"))\n",
    "\n",
    "    st.subheader(\"Senior Citizen vs Churn\")\n",
    "    fig, ax = plt.subplots()\n",
    "    sns.countplot(x='SeniorCitizen', hue='Churn', data=df_filtered, palette='Set2', ax=ax)\n",
    "    ax.set_xticks([0, 1])\n",
    "    ax.set_xticklabels(['Not Senior', 'Senior'])\n",
    "    plt.title(\"Churn by Senior Citizen Status\")\n",
    "    st.pyplot(fig)\n",
    "\n",
    "with tab3:\n",
    "    st.subheader(\"Monthly Charges vs Churn\")\n",
    "    st.pyplot(plot_box(\"Churn\", \"MonthlyCharges\", \"Monthly Charges by Churn\"))\n",
    "\n",
    "    st.subheader(\"Total Charges vs Churn\")\n",
    "    st.pyplot(plot_box(\"Churn\", \"TotalCharges\", \"Total Charges by Churn\"))\n",
    "\n",
    "    st.subheader(\"Tenure Distribution\")\n",
    "    st.pyplot(plot_hist(\"tenure\", \"Tenure by Churn\"))\n",
    "\n",
    "with tab4:\n",
    "    st.subheader(\"Correlation Heatmap\")\n",
    "    st.pyplot(plot_heatmap())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5e8f3161-976c-48fa-bf64-311f95450870",
   "metadata": {},
   "outputs": [],
   "source": [
    "#run this in terminal to access streamlit dashboard\n",
    "streamlit run churn_dashboard_streamlit.py"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
